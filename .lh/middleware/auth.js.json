{
    "sourceFile": "middleware/auth.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1673150965761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1673151354451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n                 message: \"Please login first\",\r\n             })\r\n         }\r\n         const decoded = await Jwt.verify(token, process.env.JWT_SECRET);\r\n-        re.user = await User_model.findById(decoded.id);\r\n+        req.user = await User_model.findById(decoded.id);\r\n         if (req.user === null) {\r\n             return res.status(401).json({\r\n                 message: \"Token Expired!!\",\r\n             })\r\n"
                }
            ],
            "date": 1673150965761,
            "name": "Commit-0",
            "content": "import User_model from \"../model/user_model.js\";\r\nimport Jwt from \"jsonwebtoken\";\r\n\r\nexport const authenticated = async (req, res, next) => {\r\n    try {\r\n        let token = \"\";\r\n        token = token ? token : req?.headers?.authorization;\r\n        token = token?.replace(\"Bearer \", \"\");\r\n        if (!token) {\r\n            return res.status(401).json({\r\n                message: \"Please login first\",\r\n            })\r\n        }\r\n        const decoded = await Jwt.verify(token, process.env.JWT_SECRET);\r\n        res.user = await User_model.findById(decoded.id);\r\n        if (req.user === null) {\r\n            return res.status(401).json({\r\n                message: \"Token Expired!!\",\r\n            })\r\n        }\r\n        next();\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n        return res.status(500).json({\r\n            message: error.message\r\n        })\r\n        \r\n    }\r\n}\r\n"
        }
    ]
}